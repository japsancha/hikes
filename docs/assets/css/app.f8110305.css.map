{"version":3,"sources":["webpack:///src/src/App.vue","app.f8110305.css","webpack:///src/components/src/components/HikeMap.vue","webpack:///src/views/src/views/Hike.vue","webpack:///src/views/src/views/AddHike.vue","webpack:///src/views/src/views/HikeDelete.vue","webpack:///src/views/src/views/HikeEdit.vue","webpack:///src/views/src/views/List.vue"],"names":[],"mappings":"AAeA,KACA,6BAAA,CACA,kCAAA,CACA,iCAAA,CACA,iBAAA,CACA,aAAA,CACA,eCbA,CDeA,iBACA,YCbA,CC2BA,sBACA,YAAA,CACA,UDvBA,CE8CA,6BACA,eF1CA,CE4CA,4BACA,eF1CA,CE4CA,0BACA,cF1CA,CE4CA,sBACA,YAAA,CACA,UF1CA,CGkCA,6BACA,eH7BA,CGgCA,0BACA,cH9BA,CGiCA,gCACA,cH/BA,CIdA,6BACA,eJmBA,CIhBA,0BACA,cJkBA,CKEA,6BACA,eLIA,CKFA,sBACA,eLIA,CKFA,0BACA,cLIA,CKFA,0BACA,WLIA,CMcA,6BACA,eNTA,CMYA,0BACA,cAAA,CACA,eNVA,CMYA,oBACA,iBNVA,CMYA,mCACA,eAAA,CACA,iBNVA,CMYA,2BACA,sCNVA","file":"app.f8110305.css","sourcesContent":["/* eslint-disable */\n<template>\n  <div id=\"app\">\n    <router-link v-bind:to=\"'/'\"><img class=\"backpacker-logo\" src=\"./assets/backpacker.svg\"></router-link>\n    <router-view/>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'App'\n}\n</script>\n\n<style>\n#app {\n  font-family: 'Ubuntu', sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 20px;\n}\n.backpacker-logo{\n  height: 150px;\n}\n</style>\n","\n#app {\n  font-family: 'Ubuntu', sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 20px;\n}\n.backpacker-logo{\n  height: 150px;\n}\n\n\n#map[data-v-ce47ce04] {\n  height: 400px;\n  width: 100%;\n}\n\n\n.form-group[data-v-17c13fe6] {\n  max-width: 500px;\n}\n.text-info[data-v-17c13fe6] {\n  text-align: left;\n}\n.actions[data-v-17c13fe6] {\n  padding: 10px 0;\n}\n#map[data-v-17c13fe6] {\n  height: 400px;\n  width: 100%;\n}\n\n\n\n.form-group[data-v-7cca0f43] {\n      max-width: 500px;\n}\n.actions[data-v-7cca0f43] {\n      padding: 10px 0;\n}\n.glyphicon-usd[data-v-7cca0f43] {\n      font-size: 12px;\n}\n\n\n\n.form-group[data-v-1cb3d4a5] {\n      max-width: 500px;\n}\n.actions[data-v-1cb3d4a5] {\n      padding: 10px 0;\n}\n\n\n\n\n.form-group[data-v-95098422] {\n  max-width: 500px;\n}\n.act[data-v-95098422]  {\n  margin-top: 20px;\n}\n.actions[data-v-95098422] {\n  padding: 10px 0;\n}\nform div[data-v-95098422] {\n  margin:auto;\n}\n\n\n\n.form-group[data-v-5738c63e] {\n  max-width: 500px;\n}\n.actions[data-v-5738c63e] {\n  padding: 10px 0;\n  text-align: left;\n}\nth[data-v-5738c63e] {\n  text-align: center;\n}\ntr td[data-v-5738c63e]:first-child {\n  text-align: left;\n  padding-left: 30px;\n}\n.btn-text[data-v-5738c63e] {\n  font-family:Arial, Helvetica, sans-serif;\n}\n\n\n\n/*# sourceMappingURL=app.f8110305.css.map*/","/* eslint-disable */\n<template>\n  <div class=\"hike-map\">\n     <div id=\"map\"></div>\n  </div>\n</template>\n\n<script>\nimport { KEY } from \"../config\";\nconst loadGoogleMapsApi = require(\"load-google-maps-api\");\nexport default {\n  name: \"hike-map\",\n  data() {\n    return{};\n  },\n  // prop names are bound to v-bind:lat and v-bind:long\n  props:['lat','long'],\n  mounted() {\n    loadGoogleMapsApi({ key: KEY })\n      .then(googleMaps => {\n        new googleMaps.Map(document.querySelector(\"#map\"), {\n          center: {\n            lat: this.lat,\n            lng: this.long\n          },\n          zoom: 12\n        });\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  }\n};\n// AIzaSyCnBaP_WQB9R6-4ilksoMB1VuTEAgJRtco\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n#map {\n  height: 400px;\n  width: 100%;\n}\n</style>\n","/* eslint-disable */\n<template>\n  <div class=\"hike container text-info\">\n    <h2>{{ hike.name }}</h2>\n    <div class=\"col-xs-12 col-md-6\"> \n      <b>Link: </b>\n      <div><a :href=\"hike.link\" target=\"_blank\">{{ hike.link }}</a></div>\n      <b>Elevation: </b>\n      <div>{{ hike.elevation }}</div>\n      <b>Latitude: </b>\n      <div>{{ hike.latitude }}</div>\n      <b>Longitude: </b>\n      <div>{{ hike.longitude }}</div>\n      <b>Length: </b>\n      <div>{{ hike.length }}</div>\n    </div>\n    <div class=\"col-xs-12 col-md-6\">\n      <!-- hike-map is a component created in HikeMap.vue -->\n      <hike-map v-bind:lat=\"hike.latitude\" v-bind:long=\"hike.longitude\"></hike-map>\n    </div> \n    <br/>\n    <div class=\"col-xl-12\">\n      <span class=\"glyphicon glyphicon-arrow-left\" aria-hidden=\"true\"></span>\n      <router-link v-bind:to=\"'/'\">Back to hike list</router-link>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapList } from \"../data\";\nimport { KEY } from \"../config\";\nimport HikeMap from \"@/components/HikeMap\";\nconst loadGoogleMapsApi = require(\"load-google-maps-api\");\nexport default {\n  name: \"hike\",\n  data() {\n    return {\n      hike: mapList.getItemByKey(this.$route.params.hike_id)\n    };\n  },\n  components: {\n    \"hike-map\": HikeMap\n  },\n  mounted() {\n    loadGoogleMapsApi({ key: KEY })\n      .then(googleMaps => {\n        new googleMaps.Map(document.querySelector(\"#map\"), {\n          center: {\n            lat: this.hike.latitude,\n            lng: this.hike.longitude\n          },\n          zoom: 12\n        });\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  }\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.form-group {\n  max-width: 500px;\n}\n.text-info {\n  text-align: left;\n}\n.actions {\n  padding: 10px 0;\n}\n#map {\n  height: 400px;\n  width: 100%;\n}\n\n</style>\n","/* eslint-disable */\n<template>\n  <div class=\"add-hike container\">\n       <h2>Add new hike</h2>\n    <form v-on:submit=\"createHike\">\n      <div class=\"form-group\">\n        <label for=\"edit-name\">Name</label>\n        <input class=\"form-control\" id=\"edit-name\" v-model=\"hike.name\" required/>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"edit-link\">Link</label>\n        <input class=\"form-control\" id=\"edit-link\" v-model=\"hike.link\" required/>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"edit-elevation\">Elevation</label>\n        <input class=\"form-control\" id=\"edit-elevation\" v-model=\"hike.elevation\" required/>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"edit-latitude\">Latitude</label>\n        <input class=\"form-control\" id=\"edit-latitude\" v-model=\"hike.latitude\" required/>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"edit-name\">Longitude</label>\n        <input class=\"form-control\" id=\"edit-longitude\" v-model=\"hike.longitude\" required/>\n      </div>\n      \n      <div class=\"form-group\">\n        <label for=\"edit-length\">Length</label>\n         <input class=\"form-control\" id=\"edit-length\" v-model=\"hike.length\"/>       \n      </div>\n      <button type=\"submit\" class=\"btn btn-primary\">Create</button>\n      <router-link class=\"btn btn-default\" v-bind:to=\"'/'\">Cancel</router-link>\n    </form>\n  </div>\n</template>\n\n<script>\nimport { mapList } from '../data';\nexport default {\n  name: 'AddHike',\n  data () {\n    return {\n      hike: {name: '',link:'', elevation: '', latitude: '',longitude:'', length:''},\n    hikes: mapList}\n  },\n  methods: {\n    createHike: function () {\n      var hike = this.hike\n      this.hikes.add({\n        id: Math.random().toString().split('.')[1],\n        name: hike.name,\n        link: hike.link,\n        elevation: hike.elevation,\n        latitude: hike.latitude,\n        longitude: hike.longitude,\n        length: hike.length\n      })\n      this.$router.push('/')\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.form-group {\n      max-width: 500px;\n    }\n\n    .actions {\n      padding: 10px 0;\n    }\n\n    .glyphicon-usd {\n      font-size: 12px;\n    }\n\n</style>\n","/* eslint-disable */\n<template>\n  <div class=\"delete-hike container\">\n       <h2>Delete Hike {{ hike.name }}</h2>\n    <form v-on:submit=\"deleteHike\">\n      <p>The action cannot be undone.</p>\n      <button type=\"submit\" class=\"btn btn-danger\">Delete</button>\n      <router-link class=\"btn btn-default\" v-bind:to=\"'/'\">Cancel</router-link>\n    </form>\n  </div>\n</template>\n\n<script>\nimport { mapList } from '../data';\nexport default {\n  name: \"hikeDelete\",\n  data() {\n    return { hike: mapList.getItemByKey(this.$route.params.hike_id),hikes: mapList };\n  },\n  methods: {\n    deleteHike: function() {\n      this.hikes.remove(this.hike.id)\n      this.$router.push(\"/\");\n    }\n  }\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.form-group {\n      max-width: 500px;\n    }\n\n    .actions {\n      padding: 10px 0;\n    }\n\n\n</style>\n","/* eslint-disable */\n<template>\n  <div class=\"hike-edit container\">\n      <h2>Edit hike</h2>\n    <form v-on:submit=\"updateHike\">\n      <div class=\"form-group\">\n        <label for=\"edit-name\">Name</label>\n        <input class=\"form-control\" id=\"edit-name\" v-model=\"hike.name\" required/>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"edit-link\">Link</label>\n        <input class=\"form-control\" id=\"edit-link\" v-model=\"hike.link\" required/>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"edit-elevation\">Elevation</label>\n        <input class=\"form-control\" id=\"edit-elevation\" v-model=\"hike.elevation\" required/>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"edit-latitude\">Latitude</label>\n        <input class=\"form-control\" id=\"edit-latitude\" v-model=\"hike.latitude\" required/>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"edit-name\">Longitude</label>\n        <input class=\"form-control\" id=\"edit-longitude\" v-model=\"hike.longitude\" required/>\n      </div>\n      \n      <div class=\"form-group\">\n        <label for=\"edit-length\">Length</label>\n         <input class=\"form-control\" id=\"edit-length\" v-model=\"hike.length\"/>       \n      </div>\n      <button type=\"submit\" class=\"btn btn-primary act\">Save</button>\n      <router-link class=\"btn btn-default act\" v-bind:to=\"'/'\">Cancel</router-link>\n    </form>\n  </div>\n</template>\n\n<script>\nimport { mapList } from \"../data\";\nexport default {\n  name: \"hikeEdit\",\n  data() {\n    return { hike: mapList.getItemByKey(this.$route.params.hike_id), hikes: mapList };\n  },\n  methods: {\n    updateHike: function() {\n      this.hikes.update(this.hike);\n      this.$router.push(\"/\");\n    }\n  }\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.form-group {\n  max-width: 500px;\n}\n.act  {\n  margin-top: 20px;\n}\n.actions {\n  padding: 10px 0;\n}\nform div {\n  margin:auto;\n}\n\n</style>\n","/* eslint-disable */\n<template>\n  <div class=\"hike-list container\">\n      \n    <div class=\"filters row\">\n      <div class=\"form-group col-sm-3\">\n        <label for=\"search-element\">Hike Name</label>\n        <input v-model=\"searchKey\" class=\"form-control\" id=\"search-element\" requred/>\n      </div>\n    </div>\n    <table class=\"table\">\n      <thead>\n      <tr class=\"m-0\">\n        <th class=\"w-20\">Name</th>\n        <th class=\"w-10\">Elevation</th>\n        <th class=\"w-10\">Latitude</th>\n        <th class=\"w-10\">Longitude</th>\n        <th class=\"w-20\">Length</th>\n        <th class=\"w-30\">Actions</th>\n      </tr>\n      </thead>\n      <tbody>\n      <tr v-for=\"(hike,index) in filteredHikes\" v-bind:key=\"index\">\n        <td>\n          <router-link v-bind:to=\"{name: 'hike', params: {hike_id: hike.id}}\">{{ hike.name }}\n            </router-link>\n          <a target=\"_blank\" v-bind:href=\"hike.link\"><span class=\"glyphicon glyphicon-info-sign\"></span></a>\n\n        </td>\n  \n        <td>\n          {{ hike.elevation }}\n        </td>\n         <td>\n          {{ hike.latitude }}\n        </td>\n         <td>\n          {{ hike.longitude }}\n        </td>\n         <td>\n          {{ hike.length }}\n        </td>\n        <td>\n          <router-link class=\"btn btn-success btn-xs\" v-bind:to=\"{name: 'hike-edit', params: {hike_id: hike.id}}\">Edit</router-link>\n          <router-link class=\"btn btn-danger btn-xs\" v-bind:to=\"{name: 'hike-delete', params: {hike_id: hike.id}}\">Delete</router-link>\n        </td>\n      </tr>\n      </tbody>\n       <div class=\"actions\">\n      <router-link tag=\"button\" class=\"btn btn-default\" v-bind:to=\"{path: '/add-hike'}\">\n        <button><i class=\"fas fa-plus\"><span class=\"btn-text\">Add hike</span></i></button>\n      </router-link>\n    </div>\n    </table>\n  </div>\n</template>\n\n<script>\nimport { mapList } from \"../data\";\nexport default {\n  name: \"List\",\n  data() {\n    return { \n      hikes: mapList, \n      searchKey: \"\" \n      };\n  },\n  computed: {\n    filteredHikes: function() {\n      let search = this.searchKey.toLowerCase();\n      return this.hikes.asList().filter((hike)=> {\n        return (\n          search.length === 0 ||\n          hike.name.toLowerCase().indexOf(search) !== -1\n        );\n      }, this);\n    }\n  }\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.form-group {\n  max-width: 500px;\n}\n\n.actions {\n  padding: 10px 0;\n  text-align: left;\n}\nth {\n  text-align: center;\n}\ntr td:first-child {\n  text-align: left;\n  padding-left: 30px;\n}\n.btn-text {\n  font-family:Arial, Helvetica, sans-serif;\n}\n\n</style>\n"]}